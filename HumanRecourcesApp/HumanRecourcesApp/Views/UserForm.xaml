<Window x:Class="HumanResourcesApp.Views.UserForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HumanResourcesApp.Views"
        xmlns:classes="clr-namespace:HumanResourcesApp.Classes"
        xmlns:vm="clr-namespace:HumanResourcesApp.ViewModels"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Height="500" Width="550"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Background="#F5F7FA">

    <Window.Resources>
        <classes:BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <classes:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisConverter"/>

        <!-- Common Styles -->
        <Style x:Key="FormLabel" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,5,0,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="FormInput" TargetType="Control">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource FormInput}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#F0F0F0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource FormInput}">
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,5"/>
        </Style>

        <Style x:Key="FormButton" TargetType="Button">
            <Setter Property="Height" Value="32"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Padding" Value="15,0"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Background" Value="#2E86DE"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1D75C0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#166ABD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CancelButton" TargetType="Button" BasedOn="{StaticResource FormButton}">
            <Setter Property="Background" Value="#6C757D"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5A6268"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#545B62"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TogglePasswordButton" TargetType="Button">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <TextBlock Grid.Row="0" 
                   Text="{Binding WindowTitle}" 
                   FontSize="20" 
                   FontWeight="Bold" 
                   Margin="0,0,0,20"/>

        <!-- Form Content -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Padding="5">
            <StackPanel>
                <!-- Username -->
                <TextBlock Text="Username *" Style="{StaticResource FormLabel}"/>
                <TextBox Text="{Binding User.Username, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource TextBoxStyle}"/>

                <!-- Password Section -->
                <Grid Margin="0,10,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="Password" Style="{StaticResource FormLabel}"/>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Password Box (Visible when ShowPassword is false) -->
                        <PasswordBox x:Name="PasswordBox" 
                                     Grid.Column="0"
                                     Style="{StaticResource FormInput}"
                                     Visibility="{Binding IsPasswordVisible, Converter={StaticResource InverseBoolToVisConverter}}"/>

                        <!-- Text Box for showing password (Visible when ShowPassword is true) -->
                        <TextBox x:Name="PasswordTextBox"
                                 Grid.Column="0"
                                 Style="{StaticResource TextBoxStyle}"
                                 Text="{Binding Password}"
                                 Visibility="{Binding IsPasswordVisible, Converter={StaticResource BoolToVisConverter}}"/>

                        <!-- Toggle Password Visibility Button -->
                        <Button Grid.Column="1"
                                x:Name="TogglePasswordButton"
                                Style="{StaticResource TogglePasswordButton}"
                                Command="{Binding TogglePasswordVisibilityCommand}"
                                ToolTip="{Binding PasswordVisibilityTooltip}"
                                Margin="5,0,5,0">
                            <Image Source="{Binding PasswordVisibilityIcon}" Width="16" Height="16"/>
                        </Button>

                        <Button Grid.Column="2" 
                                Content="Generate"
                                Command="{Binding GeneratePasswordCommand}" 
                                Style="{StaticResource FormButton}"
                                Width="100"/>
                    </Grid>
                </Grid>

                <TextBlock Text="Leave password blank to keep current password" 
                           Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisConverter}}"
                           Foreground="#6C757D" 
                           Margin="0,2,0,10" 
                           FontStyle="Italic"/>

                <!-- Role -->
                <TextBlock Text="Role *" Style="{StaticResource FormLabel}"/>
                <ComboBox ItemsSource="{Binding Roles}" 
                          SelectedItem="{Binding SelectedRole}"
                          DisplayMemberPath="RoleName"
                          Style="{StaticResource ComboBoxStyle}"/>

                <!-- Linked Employee -->
                <TextBlock Text="Linked Employee" Style="{StaticResource FormLabel}"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0"
                              ItemsSource="{Binding Employees}" 
                              SelectedItem="{Binding SelectedEmployee}"
                              Style="{StaticResource ComboBoxStyle}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <Run Text="{Binding EmployeeId, StringFormat='[ID: {0}]'}"/>
                                    <Run Text="{Binding FirstName}"/>
                                    <Run Text="{Binding LastName}"/>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <Button Grid.Column="1" 
                            Content="Clear"
                            Command="{Binding ClearEmployeeCommand}" 
                            Margin="5,0,0,0"
                            Style="{StaticResource CancelButton}"
                            Width="80"/>
                </Grid>

                <!-- Status -->
                <CheckBox Content="Is Active" 
                          IsChecked="{Binding User.IsActive}" 
                          Style="{StaticResource CheckBoxStyle}"
                          Margin="0,10,0,5"/>

                <!-- Created At and Last Login (Read-only) -->
                <Grid Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </StackPanel>
        </ScrollViewer>

        <!-- Button Bar -->
        <Grid Grid.Row="2" Margin="0,20,0,0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Save" 
                        Command="{Binding SaveCommand}"
                        Style="{StaticResource FormButton}"/>
                <Button Content="Cancel" 
                        Command="{Binding CancelCommand}"
                        Style="{StaticResource CancelButton}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>